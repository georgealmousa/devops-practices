apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-depl
spec:
  replicas: 1 
  selector:
    matchLabels: 
      app: spring-app
  template:
    metadata:
      name: app-pod
      labels:
        app: spring-app
    spec:
      initContainers:
        - name: init-check
          image: busybox:1.28
          env:
            - name: DATABASE_CHECK
              valueFrom:
                configMapKeyRef: 
                  name: database-config
                  key: CHECK_MYSQL
          # command: ['sh', '-c', $(DATABASE_CHECK) ]
      containers:
        - name: spring-app
          image: georgemusa/assignment:20210626-5cb745ed
          ports:
            - containerPort: 8090
          resources:
            requests:
              memory: "1024Mi"
              cpu: "500m"
            limits:
              memory: "2048Mi"
              cpu: "1000m"
          env:
            - name: SPRING_DATASOURCE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: app-credentials
                  key: spring_user
            - name: SPRING_PROFILE
              value: mysql
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-credentials
                  key: spring_password
            - name: SPRING_DATASOURCE_URL
              value: jdbc:mysql://mysql-srv:3306/assignment?allowPublicKeyRetrieval=true
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8090
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 5 
          readinessProbe:
            tcpSocket:
              port: 8090  
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 5 
      restartPolicy: Always


            



